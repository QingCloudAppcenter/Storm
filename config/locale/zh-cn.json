{
    "Name": "名称",
    "Description": "描述",
    "Storm cluster propertie": "Storm 集群",
    "The name of the Storm service": "Storm 服务名称",
    "The description of the Storm service": "Storm 服务描述",
    "VxNet": "私有网络",
    "Memory of each node": "每个节点的内存",
    "The volume size for each instance":"每个实例的磁盘大小",
    "Choose a vxnet to join": "选择要加入的私有网络",
    "CPU": "CPU",
    "CPUs of each node": "每个节点的 CPU 数量",
    "Memory": "内存",
    "Memory of each master node": "每个节点的内存数量 (生产环境建议至少使用 2 核 4G)",
    "Memory of each slave node": "每个节点的内存数量 (生产环境建议至少使用 2 核 4G)",
    "Memory of each node ": "每个节点的内存数量",
	  "Instance Class": "主机类型",
	  "master Node": "Storm 主节点",
    "master Node Count": "主节点数量 (运行 nimbus、rpc、ui 等服务，生产环境建议使用2个节点，以实现集群 HA)",
    "rpc Node": "Storm rpc 节点",
    "rpc Node Count": "rpc 节点数量 (主节点启用了 rpc 服务，因此低负载时 rpc 节点不是必须的；如果您需要高负载 rpc 服务，可以添加单独的 rpc 节点)",
    "slave Node": "Storm 从节点",
    "slave Node Count": "从节点数量 (运行 supervisor 服务并运行 worker 进程，生产环境建议至少2个节点，以实现集群 HA)",
    "client Node": "Storm 客户端节点",
    "client Node Count": "客户端节点数量",
	  "Node Count": "节点数量",
    "count": "个",
    "Number of nodes for the cluster to create": "要创建的节点数量",
	  "Volume Size": "存储容量",
    "The volume size for each node": "每个节点的存储容量",
    "instance class": "实例类型",
    "The instance type for the cluster to run, such as high performance, high performance plus": "节点实例类型，比如性能型与超高性能型。",
    "count" : "个",
    "Count" : "节点个数",
    "The session timeout for clients to ZooKeeper" : "客户端到 ZooKeeper 的会话超时 (单位为ms)",
    "The connection timeout for clients to ZooKeeper" : "客户端到 ZooKeeper 的连接超时(单位为ms)",
    "The number of times to retry a Zookeeper operation" : "重试 Zookeeper 操作的次数",
    "The interval between retries of a Zookeeper operation" : "Zookeeper 操作重试间隔 (单位为ms)",
    "The interval time between retries of a Zookeeper operation" : "Zookeeper 操作重试间隔时间(单位为ms)",
    "This parameter is used by the storm-deploy project to configure the jvm options for the nimbus daemon" : "Storm nimbus 服务的 JVM 参数",
    "How long without heartbeating a task can go before nimbus will consider the task dead and reassign it to another location" : "若 Nimbus 在该时间内未收到 Task 的心跳消息，则会重新调度该 Task",
    "How long before a supervisor can go without heartbeating before nimbus considers it dead and stops assigning new work to it" : "若 Nimbus 在该时间内未收到 Supervisor 的心跳消息，则认为该节点失效",
    "Childopts for Storm UI Java process" : "Storm UI 服务的 JVM 参数",
    "Childopts for Storm logviewer Java process" : "Storm logviewer 服务的 JVM 参数",
    "Childopts for Storm drpc Java process" : "Storm drpc 服务的 JVM 参数",
    "Childopts for Storm pacemaker Java process" : "Storm Pacemaker 服务的 JVM 参数",
    "The maximum number of bytes all worker log files can take up in MB" : "所有 worker 的文件使用的最大内存(单位为 MB)",
    "The maximum number of bytes per worker’s files can take up in MB" : "每个 worker 的文件使用的最大内存(单位为 MB)",
    "How many processes should be spawned around the cluster to execute this topology. Each process will execute some number of tasks as threads within them. This parameter should be used in conjunction with the parallelism hints on each component in the topology to tune the performance of a topology" : "执行该topology集群中应当启动的进程数量",
    "How many executors to spawn for ackers" : "Acker 的进程个数",
    "How many executors to spawn for event logger" : "Event Logger 的进程个数",
    "The maximum number of tuples that can be pending on a spout task at any given time" : "指定一个 Spout Task 允许的未确认 Tuple 总数",
    "A list of ports that can run workers on this supervisor. Each worker uses one port, and the supervisor will only run one worker per port. Use this configuration to tune how many workers run on each machine" : "Worker 可用的端口列表",
    "Childopts for Storm supervisor Java process" : "Storm Supervisor 服务的 JVM 参数",
    "how long supervisor will wait to ensure that a worker process is started" : "Worker 启动时的超时时间",
    "how long between heartbeats until supervisor considers that worker dead and tries to restart it" : "若 Supervisor 在该时间内未收到 Worker 的心跳消息，则会重启该 Worker",
    "how many seconds to sleep for before shutting down threads on worker" : "关闭 worker 上的线程时需要睡眠的时间(单位为秒)",
    "how frequently the supervisor checks on the status of the processes it's monitoring and restarts if necessary" : "supervisor 检查其监视进程的状态以及必要时重新启动的频率",
    "how frequently the supervisor heartbeats to the cluster state (for nimbus)" : "supervisor 对集群状态的心跳频率",
    "The default heap memory size in MB per worker, used in the jvm -Xmx opts for launching the worker" : "Worker 进程默认堆内存大小",
    "The jvm opts provided to workers launched by this supervisor" : "Storm Worker 进程的 JVM 参数"
}
